<?php
/**
 *
 * The main functionality of this module.
 * Embed module haplotype-map to visualize haplotype data in tripal sites.
 *
 * about haplotype-map:
 * developed by Venkat Bandi(https://github.com/kiranbandi)
 * the module is available in https://github.com/kiranbandi/haplotype-map
*/
/**
 * Implements hook_menu(). 1
 */
function haplotypembed_menu(){
  // $default_map = NULL;
  //
  // //get all
  // $h_maps = haplotype_extract_available_maps(, );

  // $items['haplotype-map'] = array(
  //   'title' => t('Haplotype data Visulization')ï¼Œ
  //   'page callback' => 'page_list_available_maps',
  //   'access arguments' => array('view haplotype map'),
  //   'type' => MENU_NORMAL_ITEM,
  // );

  $items = array();

  $items['haplotype-map_embed'] = array(
    'title' => 'Haplotype Maps',
    'description' => 'Embeded haplotype map module for users to view haplotype files.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('haplotypemap_embed_form'),
    'access callback' => TRUE,
  );

  //administration
  //manage files, list
  $items['admin/tripal/extension/haplotype-map_embed'] = array(
    'title' => 'Embeded Haplotype map',
    'description' => 'Provides users embeded haplotype maps.',
    'page callback' => 'haplotypemap_embed_admin_list',
    'page arguments' => array(),
    'access arguments' => array('administer tripal'),
    'file' => 'includes/haplotype-map_embed.admin.inc',
  );
  // add
  $items['admin/tripal/extension/haplotype-map_embed/add'] = array(
    'title' => 'Add Haplotype map',
    'description' => 'Add a haplotype map in list.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('haplotypemap_embed_admin_file_form', 'add'),
    'access arguments' => array('administer tripal'),
    'file' => 'includes/haplotype-map_embed.admin.inc',
  );
  // edit
  $items['admin/tripal/extension/haplotype-map_embed/edit'] = array(
    'title' => 'Edit Haplotype map',
    'description' => 'Edit a haplotype map in list.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('haplotypemap_embed_admin_file_form', 'edit'),
    'access arguments' => array('administer tripal'),
    'file' => 'includes/haplotype-map_embed.admin.inc',
  );
  // delete
  $items['admin/tripal/extension/haplotype-map_embed/delete'] = array(
    'title' => 'Delete Haplotype map',
    'description' => 'Delete a haplotype map in list.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('haplotypemap_embed_admin_file_form', 'delete'),
    'access arguments' => array('administer tripal'),
    'file' => 'includes/haplotype-map_embed.admin.inc',
  );


  // manage access

  return $items;
}



//  /**
//  * Implements hook_permission().2
//  */
//
// function haplotypembed_permission(){
//   return array(
//     'view haplotype map' => array(
//       'title' => t('Access Public Haplotype maps.'),
//     ),
//     'view private haplotype map' => array(
//       'title' => t('Access Private Haplotype maps.'),
//     ),
//   );
//
// }


 /**
  * Implements hook_libraries_info(). last
  */
  function haplotypembed_libraries_info(){
    $libraries['haplotype-map'] = array(
      'name' => 'haplotype-map',
      'vendor url' => 'https://github.com/kiranbandi/haplotype-map',
      'version' => '0.0.1',
      'download url' => 'https://github.com/kiranbandi/haplotype-map',
    );
    return $libraries;
  }

// <html lang="en">
//   <head><meta charset="utf-8">
//   <meta http-equiv="X-UA-Compatible" content="IE=edge">
//   <meta name="viewport" content="width=device-width,initial-scale=1">
//   <meta name="description" content="Haplotype Visualization Browser developed at University of Saskatchewan">
//   <meta name="author" content="kiranbandi">
//   <title>SNPs Haplotype Visualization</title>
//   <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic" rel="stylesheet"></head>
//     <body>
//       <div id="root"></div>
//       <script src="bundle/main.bundle.1cd727076111f0e998e1.js"></script>
//     </body>
// </html>

/**
* Implements hook_form().
*/
function haplotypemap_embed_form($form, &$form_state){
  // check for available dataset, ask user to pick and feed to haplotype-map
  //section 1, ask user to select a file first
  $maps = page_list_available_map_files();
  $form['S1'] = array(
    '#type' => 'fieldset',
    '#title' => 'Choose your Haplotype map File.',
    '#description' => 'The following table contains all the available Haplotype maps. Choose the one you would like to show haplotype map for default germplasm or filter for specific germplasm.',
    '#prefix' => '<div id="all-haplotypemap-options"><span class="stages stage1">1</span>',
  );

  $files = page_list_available_map_files();
  // create table for all files/map
  $form['files'] = array(
    '#type' => 'hidden',
    '#value' => serialize($files),
    '#serialized' => TRUE,
  );

  $header = array(
    'name' => t('Name'),
    'total_number_germplasm' => t('Number of Germplasm'),
    'default_germplasm' => t('Default Germplasm'),
  );

  foreach ($files as $haplotypembed_file_id => $d){
    $files[$haplotypembed_file_id]['name'] = l($d['human_readable_name'], '/url/from/menu', ['query' => ['source' => 'filenamewithoutsuffix']]);
    $files[$haplotypembed_file_id]['total_number_germplasm'] = count(explode($d['human_readable_name']));
    $files[$haplotypembed_file_id]['default_germplasm'] = $d['default_germplasm'];
  }

  $form['s1']['haplotypembed_file_id'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $files,
    '#empty' => t('No Haplotype map available.'),
    '#multiple' => FALSE,
    '#ajax' => array(
      'callback' => 'ajax_haplotypemap_embed_show_description_callback',
      'wrapper' => 'all-haplotypemap-options',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );

  // markup to show file/map description

  // Path to module.
  $module_path = drupal_get_path('module', 'haplotype-map-embed');
  // Relative Path to Library.
  $haplotypemap_embed_lib_path = libraries_get_path('haplotype-map') . '/';

  //section 2, give option of using default file or filter for specific germplasm
  $form['s2'] = array(
    '#type' => 'fieldset',
    '#title' => 'Haplotype map for this file.',
    '#tree' => TRUE,
    '#prefix' => '<span class="stages stage2">2</span>',
  );
  //S2.a include haplotype-map using default file
  $form['s2']['default_map'] = array(
    '#type' => 'fieldset',
    '#title' => 'Haplotype map of default germplasm',
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#description' => 'Filter for specific germplasm and display in haplotype map'
  );

  $form['s2']['default_map']['haplotypemap_canvas'] = array(
    '#type' => 'markup',
    '#markup' =>  '
      <div id="root" data-source=""></div>
      <script src="/bundle/hapmap.js"></script>
      '
  );

  //S2.b filter file for the germpasm user choose then display with haplotype map viewer
  $form['s2']['filtered_map'] = array(
    '#type' => 'fieldset',
    '#title' => 'Restrict to specific germplasm',
    '#tree' => TRUE,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#description' => 'Filter for specific germplasm and display in haplotype map',
  );

  $form['s2']['filtered_map']['available_germplasm'] = array(
    '#type' => 'textarea',
    '#title' => 'Germplasm from selected file',
    '#disable' => TRUE,
    '#description' => 'All germplasm (individuals) in selected file. <strong>Please copy less than 15 germplasm (ideally less than 10) that need to be kept to textarea under.</strong>',
    '#rows' => 2,
    );

    $form['s2']['restrict_dataset']['germplasm_select'] = array(
    '#type' => 'textarea',
    '#title' => 'Filter for these Germplasm',
    '#description' => 'Only include these germplasm in haplotype map.',
    '#rows' => 2,
    );

    if ((isset($form_state['values']['haplotypembed_file_id'])) or (isset($_GET['haplotypembed_file_id']) AND is_numeric($_GET['haplotypembed_file_id']) )) {
      //update filter

    }

    return $form;
  }

 /**
  *  a function list all the available haplotype maps.
  */

function page_list_available_map_files(){
  global $user;

  // Gran the roles and user id of the current user.
  $uid = $user->uid;
  $rids = is_array($user->roles) ? array_keys($user->roles) : array();

  // Only grab files that the current user has permission to see.
  $files = db_query('
    SELECT f.*
    FROM {haplotypembed_perm} perm
    LEFT JOIN {haplotypembed_files} f ON f.haplotypembed_file_id=perm.haplotypembed_file_perm_id
    WHERE perm.uid=:uid OR perm.rid IN (:rids)
    ORDER BY human_readable_name ASC',
    array(':uid' => $uid, ':rids' => $rids))->fetchAllAssoc('haplotypembed_file_id', PDO::FETCH_ASSOC);

  return $files;
}

function ajax_haplotypemap_embed_show_description_callback($form, $form_state){
  return array($form['S1'], $form['S2']);
}
